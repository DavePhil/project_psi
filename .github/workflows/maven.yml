# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven
      - name: Build with Maven
        run: mvn -Dmaven.test.skip=true -B package --file pom.xml
      - name: Rename Jar
        run: mv target/*.jar target/psi-back.jar
      - name: Create SSH key file
        run: echo "${{ secrets.SSH_PRIVATE_KEY }}" > ssh_key
      - name: Deploy to Server
        run: |
          sshpass -p ${{ secrets.WINDOWS_SERVER_PASSWORD }} scp -i ssh_key -o StrictHostKeyChecking=no target/psi-back.jar ${{ secrets.WINDOWS_SERVER_USERNAME }}@${{ secrets.WINDOWS_SERVER_HOST }}:/C/Users/Administrator/Desktop/project/psi-backend

  #      - name: Build & push Docker image
#        uses: mr-smithers-excellent/docker-build-push@v5
#        with:
#          image: ${{ secrets.DOCKER_USERNAME }}/psi-backend
#          tags: latest
#          registry: docker.io
#          dockerfile: Dockerfile
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}

#  deploy:
#    runs-on: ubuntu-latest
#    needs: build
#    steps:
#      - name: Create SSH key file
#        run: echo "${{ secrets.SSH_PRIVATE_KEY }}" > ssh_key
#      - name: Deploy to Server
#        run: |
#          sshpass -p ${{ secrets.WINDOWS_SERVER_PASSWORD }} scp -i ssh_key -o StrictHostKeyChecking=no target/psi-back.jar ${{ secrets.WINDOWS_SERVER_USERNAME }}@${{ secrets.WINDOWS_SERVER_HOST }}:/C/Users/Administrator/Desktop/project/psi-backend
#          sshpass -p ${{ secrets.WINDOWS_SERVER_PASSWORD }} ssh -i ssh_key -o StrictHostKeyChecking=no ${{ secrets.WINDOWS_SERVER_USERNAME }}@${{ secrets.WINDOWS_SERVER_HOST }} 'docker pull ${{ secrets.DOCKER_USERNAME }}/psi-backend:latest'
#          sshpass -p ${{ secrets.WINDOWS_SERVER_PASSWORD }} ssh -i ssh_key -o StrictHostKeyChecking=no ${{ secrets.WINDOWS_SERVER_USERNAME }}@${{ secrets.WINDOWS_SERVER_HOST }} 'docker stop psi-backend || true'
#          sshpass -p ${{ secrets.WINDOWS_SERVER_PASSWORD }} ssh -i ssh_key -o StrictHostKeyChecking=no ${{ secrets.WINDOWS_SERVER_USERNAME }}@${{ secrets.WINDOWS_SERVER_HOST }} 'docker rm psi-backend || true'
#          sshpass -p ${{ secrets.WINDOWS_SERVER_PASSWORD }} ssh -i ssh_key -o StrictHostKeyChecking=no ${{ secrets.WINDOWS_SERVER_USERNAME }}@${{ secrets.WINDOWS_SERVER_HOST }} 'docker run -d --name psi-backend -p 4000:4000 ${{ secrets.DOCKER_USERNAME }}/psi-backend:latest'
